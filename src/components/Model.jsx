/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { forwardRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { RigidBody } from '@react-three/rapier'

export const Model = ((ref, ...props) => {
    const { nodes, materials } = useGLTF('/model/keyCard.glb')
    return (
        <RigidBody ref={ref} {...props} colliders="cuboid">
            <group dispose={null} scale={5}>
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Plane.geometry}
                    // material={nodes.Plane.material}
                    position={[-0.264, 0.64, 0.631]}
                    rotation={[0.117, 0.493, 1.491]}
                    scale={0.052}
                >
                    <meshStandardMaterial color='white' />
                </mesh>
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.clamp.geometry}
                    // material={materials.metal}
                    position={[-0.261, 0.697, 0.637]}
                    rotation={[-0.177, -1.143, -0.162]}
                    scale={0.188}
                >
                    <meshStandardMaterial color="silver" metalness={0.9} roughness={0.1} />
                </mesh>
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.clip.geometry}
                    material={materials.metal}
                    position={[-0.26, 0.717, 0.638]}
                    scale={0.145}
                >
                    <meshStandardMaterial color="silver" metalness={0.9} roughness={0.1} />
                </mesh>
            </group>
        </RigidBody>
    )
})

useGLTF.preload('/model/keyCard.glb')
