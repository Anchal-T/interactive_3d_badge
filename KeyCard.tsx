/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/model/keyCard.glb --types 
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    clamp: THREE.Mesh
    clip: THREE.Mesh
    Plane: THREE.Mesh
  }
  materials: {
    metal: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/keyCard.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Plane.geometry} material={nodes.Plane.material} position={[-0.002, 0.674, -0.03]} rotation={[-0.158, 1.538, 1.684]} scale={0.357} />
      <mesh geometry={nodes.clamp.geometry} material={materials.metal} position={[0.001, 1.067, -0.038]} rotation={[-0.086, -0.113, 0.1]} scale={1.285} />
      <mesh geometry={nodes.clip.geometry} material={materials.metal} position={[-0.01, 1.203, -0.049]} rotation={[-0.206, 1.033, 0.211]} scale={0.991} />
    </group>
  )
}

useGLTF.preload('/keyCard.glb')
